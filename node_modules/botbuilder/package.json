{
  "_from": "botbuilder@^4.3.2",
  "_id": "botbuilder@4.3.2",
  "_inBundle": false,
  "_integrity": "sha512-l7Y83WxytYSBcsFCSoqc8RqXhctnApV131nn72K/mA627DQWAK+M63gYqTFYJBjsO8ok9mNHEzPWQSE9TaJ03Q==",
  "_location": "/botbuilder",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "botbuilder",
    "fetchSpec": "^4.3.2",
    "name": "botbuilder",
    "raw": "botbuilder@^4.3.2",
    "rawSpec": "^4.3.2",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/botbuilder/-/botbuilder-4.3.2.tgz",
  "_shasum": "a943d3a58cbd0bb1ae8408c255a2b0de40fd3287",
  "_shrinkwrap": null,
  "_spec": "botbuilder@^4.3.2",
  "_where": "/Users/vbas/Documents/chat-a-bot",
  "author": {
    "name": "Microsoft Corp."
  },
  "bugs": {
    "url": "https://github.com/Microsoft/botbuilder-js/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@types/filenamify": "^2.0.1",
    "@types/node": "^10.12.18",
    "async-file": "^2.0.2",
    "botbuilder-core": "^4.3.2",
    "botframework-connector": "^4.3.2",
    "filenamify": "^2.0.0"
  },
  "deprecated": false,
  "description": "Bot Builder is a framework for building rich bots on virtually any platform.",
  "devDependencies": {
    "@types/mocha": "^2.2.47",
    "assert": "^1.4.1",
    "chatdown": "^1.0.2",
    "codelyzer": "^4.1.0",
    "mocha": "^5.2.0",
    "nyc": "^11.4.1",
    "source-map-support": "^0.5.3",
    "ts-node": "^4.1.0",
    "unzip": "^0.1.11",
    "uuid": "^3.3.2"
  },
  "files": [
    "/lib",
    "/src"
  ],
  "homepage": "https://github.com/Microsoft/botbuilder-js#readme",
  "keywords": [
    "botbuilder",
    "botframework",
    "bots",
    "chatbots"
  ],
  "license": "MIT",
  "main": "./lib/index.js",
  "name": "botbuilder",
  "optionalDependencies": {},
  "readme": "# Bot Builder for Node.js\n[Bot Builder for Node.js](http://docs.botframework.com/builder/node/overview/) is a powerful framework for constructing bots that can handle both freeform interactions and more guided ones where the possibilities are explicitly shown to the user. It is easy to use and models frameworks like Express & Restify to provide developers with a familiar way to write Bots.\n\n- [Installing](#installing)\n- [Basic Use](#build-a-bot)\n- [Learn More](#learn-more)\n- [Sample Apps](https://github.com/Microsoft/BotBuilder-Samples)\n- [Documentation](https://docs.microsoft.com/en-us/azure/bot-service/bot-service-overview-introduction?view=azure-bot-service-4.0)\n- [Class Reference](https://docs.microsoft.com/en-us/javascript/api/botbuilder/)\n- [GitHub Repo](https://github.com/Microsoft/botbuilder-js)\n- [Report Issues](https://github.com/Microsoft/botbuilder-js/issues)\n\n## Installing\nTo add the latest version of this package to your bot:\n\n```bash\nnpm install --save botbuilder\n```\n\n#### Use the Daily Build\n\nTo get access to the daily builds of this library, configure npm to use the MyGet feed before installing.\n\n```bash\nnpm config set registry https://botbuilder.myget.org/F/botbuilder-v4-js-daily/npm/\n```\n\nTo reset the registry in order to get the latest published version, run:\n```bash\nnpm config set registry https://registry.npmjs.org/\n```\n\n## What's included?\n\nBot Builder has everything you need to run a bot on almost any bot platform like the [Microsoft Bot Framework](http://botframework.com), [Skype](http://skype.com), and [Slack](http://slack.com). The core library will get your bot online and chatting.\nThen, extend and connect your Bot Builder app with these plugins:\n\n| Plugin | Description\n|--- |---\n| [botbuilder-dialogs](https://github.com/microsoft/botbuilder-js/tree/master/libraries/botbuilder-dialogs/README.md) | Powerful dialog system with dialogs that are isolated and composable, and built-in prompts for simple things like Yes/No, strings, numbers, enumerations.\n| [botbuilder-ai](https://github.com/microsoft/botbuilder-js/tree/master/libraries/botbuilder-dialogs/README.md) | Utilize powerful AI frameworks like [LUIS](https://www.luis.ai) and [QnA Maker](https://www.qnamaker.ai).\n| [botbuilder-azure](https://github.com/microsoft/botbuilder-js/tree/master/libraries/botbuilder-azure/README.md) | Incorporate Azure services like Cosmos DB and Blob Storage into your bot.\n\n## Build a bot\n[Read the quickstart guide](https://docs.microsoft.com/en-us/azure/bot-service/javascript/bot-builder-javascript-quickstart?view=azure-bot-service-4.0) \nthat will walk you through setting up your Bot Builder app so that you've got a well structured project and\nall of the tools necessary to develop and extend your bot.\n \n### Start from scratch\nCreate a folder for your bot, cd into it, and run npm init.\n\n```\nnpm init\n```\n    \nGet the BotBuilder and Restify modules using npm.\n\n```\nnpm install --save botbuilder\nnpm install --save restify\n```\n    \nCreate a file named bot.js and get your bot online with a few lines of code.\n \n```javascript\nconst restify = require('restify');\nconst botbuilder = require('botbuilder');\n\n// Create bot adapter, which defines how the bot sends and receives messages.\nvar adapter = new botbuilder.BotFrameworkAdapter({\n    appId: process.env.MicrosoftAppId,\n    appPassword: process.env.MicrosoftAppPassword\n});\n\n// Create HTTP server.\nlet server = restify.createServer();\nserver.listen(process.env.port || process.env.PORT || 3978, function () {\n    console.log(`\\n${server.name} listening to ${server.url}`);\n    console.log(`\\nGet Bot Framework Emulator: https://aka.ms/botframework-emulator`);\n});\n\n// Listen for incoming requests at /api/messages.\nserver.post('/api/messages', (req, res) => {\n    // Use the adapter to process the incoming web request into a TurnContext object.\n    adapter.processActivity(req, res, async (turnContext) => {\n        // Do something with this incoming activity!\n        if (turnContext.activity.type === 'message') {            \n            // Get the user's text\n            const utterance = turnContext.activity.text;\n\n            // send a reply\n            await turnContext.sendActivity(`I heard you say ${ utterance }`);\n        }\n    });\n});\n```\n\n## Test your bot\nUse the [Bot Framework Emulator](https://docs.microsoft.com/en-us/azure/bot-service/bot-service-debug-emulator?view=azure-bot-service-4.0) to test your bot on localhost. \n\nInstall the emulator from [here](https://aka.ms/botframework-emulator) and then start your bot in a console window.\n    \nStart the emulator and say \"hello\" to your bot.\n\n## Publish your bot\nDeploy your bot to the cloud and then [register it](https://docs.microsoft.com/en-us/azure/bot-service/bot-service-quickstart?view=azure-bot-service-4.0) with the Azure Bot Service.\n\n## Learn More\nLearn how to build great bots.\n\n* [Core Concepts Guide](http://docs.botframework.com/builder/node/guides/core-concepts/)\n* [Bot Builder for Node.js Reference](https://docs.microsoft.com/en-us/javascript/api/botbuilder/)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Microsoft/botbuilder-js.git"
  },
  "scripts": {
    "build": "tsc",
    "build-docs": "typedoc --theme markdown --entryPoint botbuilder --excludePrivate --includeDeclarations --ignoreCompilerErrors --module amd --out ..\\..\\doc\\botbuilder .\\lib\\index.d.ts ..\\botbuilder-core\\lib\\index.d.ts ..\\botbuilder-core-extensions\\lib\\index.d.ts ..\\botframework-schema\\lib\\index.d.ts --hideGenerator --name \"Bot Builder SDK\" --readme none",
    "clean": "erase /q /s .\\lib",
    "set-version": "npm version --allow-same-version 4.3.2",
    "test": "tsc && nyc mocha tests/"
  },
  "typings": "./lib/index.d.ts",
  "version": "4.3.2"
}
