"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * A `BotState` specific implementation of the `StatePropertyAccessor` interface.
 *
 * @remarks
 * Properties can be defined for a given `BotState` instance using `createProperty()`.
 *
 * ```JavaScript
 * const dialogStateProperty = ConversationState.createProperty('dialogState');
 * const dialogs = new DialogSet(dialogStateProperty);
 * ```
 * @param T (Optional) type of property being persisted. Defaults to `any` type.
 */
class BotStatePropertyAccessor {
    /**
     * Creates a new BotStatePropertyAccessor instance.
     * @param state Parent BotState instance.
     * @param name Unique name of the property for the parent BotState.
     */
    constructor(state, name) {
        this.state = state;
        this.name = name;
    }
    async delete(context) {
        const obj = await this.state.load(context);
        if (obj.hasOwnProperty(this.name)) {
            delete obj[this.name];
        }
    }
    async get(context, defaultValue) {
        const obj = await this.state.load(context);
        if (!obj.hasOwnProperty(this.name) && defaultValue !== undefined) {
            const clone = (typeof defaultValue === 'object' || Array.isArray(defaultValue)) ? JSON.parse(JSON.stringify(defaultValue)) : defaultValue;
            obj[this.name] = clone;
        }
        return obj[this.name];
    }
    async set(context, value) {
        const obj = await this.state.load(context);
        obj[this.name] = value;
    }
}
exports.BotStatePropertyAccessor = BotStatePropertyAccessor;
//# sourceMappingURL=botStatePropertyAccessor.js.map